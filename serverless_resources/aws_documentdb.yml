Resources:
  # ====================================================================================================================
  # [DEFINITION] DOCUMENTDB > Cluster
  # ====================================================================================================================
  # https://github.com/nanlabs/devops-reference/blob/main/examples/serverless-documentdb/variables.yml
  DocumentDBCluster:
    Type: AWS::DocDB::DBCluster
    Properties:
      DBClusterIdentifier: ${self:custom.documentdbClusterName}
      MasterUsername:         
        Fn::Sub:
          - "{{resolve:secretsmanager:${SecretName}:SecretString:username}}"
          - SecretName: !Ref SecretsManagerDocumentDBConnectionSecret
      MasterUserPassword:         
        Fn::Sub:
          - "{{resolve:secretsmanager:${SecretName}:SecretString:password}}"
          - SecretName: !Ref SecretsManagerDocumentDBConnectionSecret
      DBSubnetGroupName: !Ref DocumentDBSubnetGroup
      DBClusterParameterGroupName: !Ref DocumentDBClusterParameterGroup
      VpcSecurityGroupIds:
        - ${self:custom.vpcNetwork.securityGroupId}
        - !Ref DocumentDBSecurityGroup
        # - !GetAtt EC2WorkspaceSecurityGroup.GroupId

  DocumentDBClusterParameterGroup:
    Type: AWS::DocDB::DBClusterParameterGroup
    Properties:
      Name: !Sub ${self:custom.documentdbClusterName}-parameter-group
      Description: DocumentDB cluster parameter group
      Family: docdb5.0
      Parameters:
        tls: disabled

  # DocumentDBInstanceReader:
  #   Type: AWS::DocDB::DBInstance
  #   DependsOn: DocumentDBCluster
  #   Properties:
  #     DBClusterIdentifier: ${self:custom.documentdbClusterName}
  #     DBInstanceClass: db.t4g.medium

  DocumentDBInstanceWriter:
    Type: AWS::DocDB::DBInstance
    DependsOn: DocumentDBCluster
    Properties:
      DBClusterIdentifier: ${self:custom.documentdbClusterName}
      DBInstanceClass: db.t4g.medium
      Tags:
        - Key: Name
          Value: ${self:custom.documentdbClusterName}-instance-writer

  DocumentDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ${self:service}-sg-documentdb-${self:provider.stage}
      GroupDescription: Allow documentdb traffic
      VpcId: ${self:custom.vpcNetwork.vpcId}
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 27017
          ToPort: 27017
          Description: DocumentDB Access
        - IpProtocol: tcp
          CidrIpv6: ::/0
          FromPort: 27017
          ToPort: 27017
          Description: DocumentDB Access

  DocumentDBSubnetGroup:
    Type: AWS::DocDB::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DocumentDB subnet group
      DBSubnetGroupName: ${self:custom.documentdbClusterName}-subnet-group
      SubnetIds: ${self:custom.vpcNetwork.subnetIds}


# ======================================================================================================================
# [OUTPUTS] INFORMATION > Log information
# ======================================================================================================================
Outputs:
  DocumentDBClusterEndpoint:
    Description: Documentdb access endpoint
    Value: !GetAtt DocumentDBCluster.Endpoint
  DocumentDBClusterPort:
    Description: Documentdb access port
    Value: !GetAtt DocumentDBCluster.Port